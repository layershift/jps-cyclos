{
  "jpsVersion": "0.9",
  "jpsType": "install",
  "application": {
    "description": {
      "en": "Cyclos 4 PRO is our payment platform for large businesses and organisations. It is secure and reliable JAVA software that can be installed on your server. Both application server as the database server are fully clusterable. It offers mobile banking (Mobile app, SMS, USSD*, and IVR*), online banking and much more."
    },
    "id": "cyclos4",
    "name": "Cyclos4 Pro",
    "categories": [
      "apps/accounting",
      "apps/popular",
      "apps/sales-and-marketing"
    ],
    "type": "java",
    "homepage": "http://www.cyclos.org/",
    "baseUrl": "https://raw.githubusercontent.com/layershift/jps-cyclos/master",
    "logo": "/images/cyclos.png",
    "version": "4.15.8",
    "success": {
      "text": "Instance address: [${env.url}](${env.url}) \n\nTo add custom domain name for your Cyclos installation follow the steps described in our [documentation](http://docs.jelastic.com/custom-domains)",
      "email": "Instance address: [${env.url}](${env.url}) \n\nTo add custom domain name for your Cyclos installation follow the steps described in our [documentation](http://docs.jelastic.com/custom-domains)"
    },
    "env": {
      "topology": {
        "engine": "java11",
        "nodes": [
          {
            "cloudlets": 8,
            "nodeType": "tomcat9"
          },
          {
            "cloudlets": 8,
            "nodeType": "postgresql"
          }
        ]
      }
    },
    "onInstall": {
      "call": [
        "deployment",
        "configuringApp"
      ]
    },
    "procedures": [
      {
        "id": "deployment",
        "onCall": [
          {
            "deploy": [
              {
                "name": "cyclos4-15-8.war",
                "context": "ROOT",
                "archive": "https://jps.layershift.com/cyclos/cyclos-4/dumps/cyclos.zip"
              }
            ]
          }
        ]
      },
      {
        "id": "pgsqlPassworReset",
        "onCall": [
          {
            "api": [
              {
                "method": "env.control.resetservicepassword",
                "params": {
                  "nodeGroup": "sqldb",
                  "password": "${nodes.sqldb.password}"
                }
              }
            ]
          }
        ]
      },
      {
        "id": "configuringApp",
        "onCall": [
          {
            "executeShellCommands": [
              {
                "nodeType": "sqldb",
                "user": "root",
                "commands": [
                  "curl -sSfL \"${baseUrl}/cyclos-4/scripts/install.sh\" -o ${SERVER_SCRIPTS}/install.sh 2>&1",
                  "/bin/bash ${SERVER_SCRIPTS}/install.sh \"cyclos\" \"cyclos4\" \"${user.appPassword}\" \"${nodes.sqldb.password}\" 2>>${SERVER_SCRIPTS}/install.log 1>>${SERVER_SCRIPTS}/install.log"
                ]
              },
              {
                "nodeType": "cp",
                "commands": [
                  "cp -f ${tomcat.WEBAPPS}/ROOT/WEB-INF/classes/cyclos-release.properties ${tomcat.WEBAPPS}/ROOT/WEB-INF/classes/cyclos.properties"
                ]
              }
            ]
          },
          {
            "replaceInFile": [
              {
                "path": "${tomcat.WEBAPPS}/ROOT/WEB-INF/classes/cyclos.properties",
                "nodeType": "cp",
                "replacements": [
                  {
                    "pattern": "cyclos.datasource.jdbcUrl = jdbc:postgresql://localhost/cyclos4",
                    "replacement": "cyclos.datasource.jdbcUrl = jdbc:postgresql://${nodes.sqldb.address}/cyclos4"
                  },
                  {
                    "pattern": "cyclos.datasource.user = cyclos",
                    "replacement": "cyclos.datasource.user = cyclos"
                  },
                  {
                    "pattern": "cyclos.datasource.password = cyclos",
                    "replacement": "cyclos.datasource.password = ${user.appPassword}"
                  }
                ]
              }
            ]
          },
          {
            "restartNodes": {
              "nodeType": "cp"
            }
          }
        ]
      }
    ]
  }
}
